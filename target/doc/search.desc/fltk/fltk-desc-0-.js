searchState.loadedDescShard("fltk", 0, "fltk-rs\nApplication related methods and functions\nBrowser widgets\nButton widgets\nDialog widgets\nDrawing primitives\nFltk defined enums: Color, Font, <code>CallbackTrigger</code> etc\nBasic fltk box/frame widget\nGroup widgets\nImage types supported by fltk\nInput widgets\nmod macros;\nMenu widgets\nMiscellaneous widgets not fitting a certain group\nOutput widgets\nAll fltk widget traits and flt error types\nPrinting related functions\nWidget surface to image functions\nTable widgets\nTerminal widget\nText display widgets\nTree widgets\nGeneral utility functions\nValuator widgets\nBase Widget Basic empty widget\nDefines a set of convenience functions for constructing …\nWindow widgets Window widgets\nBasic Application struct, used to instantiate, set the …\nAlias Scheme to <code>AppScheme</code>\nWhen switched on, moving the text cursor beyond the start …\nBack mouse button\nBase fltk scheming\nBase fltk scheming\nHandle object for interacting with check callbacks\nnew (FLTK 1.4.0) default function\nTypes of Clipboard contents\nThe event clipboard type\nContrast modes supported by FLTK\noptional custom contrast function\nThe display global variable, <code>fl_display</code>. <code>_XDisplay</code> on X11, …\nIf text drag-and-drop is enabled (default), the user can …\nDown movement\nWhen switched on (default), Fl_Native_File_Chooser runs …\nMeaningful for the Wayland/X11 platform only. When …\nForward mouse button\ninspired by the Clearlooks Glossy scheme\ninspired by the Clearlooks Glossy scheme\nRepresents global state\nThe current graphics context of the app, <code>fl_gc</code>. <code>*mut c_void</code>…\ninspired by the GTK+ theme\ninspired by the GTK+ theme\nHandle object for interacting with idle callbacks\nimage paste event\nImage content\nLeft mouse button\nLeft movement\nlegacy (FLTK 1.3.x) contrast function\nMiddle mouse button\nDefines Mouse buttons\nEvent direction with Mousewheel event\nNo movement\nalways return foreground color\nglobal FLTK options\nSubset of Dmitrij K’s oxy scheme\nSubset of Dmitrij K’s oxy scheme\ninspired by the Aqua user interface on Mac OS X\ninspired by the Aqua user interface on Mac OS X\nWhen switched on (default), Fl_Printer runs the GTK …\nCreates a receiver struct\nRight mouse button\nRight movement\nSet the app scheme\nAn available screen\nCreates a sender struct\nWhen switched on (default), the library shows in a …\nIf tooltips are enabled (default), hovering the mouse over …\nText paste event\nTextual content\nHandle object for interacting with timeouts\nUp movement\nIf visible focus is switched on (default), FLTK will draw …\nAllows setting a an id to a widget.\nAlias Widget ptr\nAlias Window ptr\nGets FLTK ABI version\nAdd a check callback to run within the event loop. This …\nRegister a callback whenever there is a change to the …\nRegister a callback whenever there is a change to the …\nRegister a callback whenever there is a change to the …\nAdds a custom handler for unhandled events\nAdd an idle callback to run within the event loop. Calls …\nAdd an idle callback to run within the event loop. Calls …\nAdd an idle callback to run within the event loop. This …\nAdd a new symbol, that can be accessed using the <code>@</code> prefix\nAdd a system handler\nAdds a one-shot timeout callback. The timeout duration <code>tm</code> …\nAdds a one-shot timeout callback. The timeout duration <code>tm</code> …\nAdds a one-shot timeout callback. The timeout duration <code>tm</code> …\nReturns a vector containing all the <code>Screen</code>s, ordered by …\nGets FLTK API version\nTrigger event loop handling in the main thread\nRegisters a function that will be called by the main …\nSet the background color\nSet the background color for input and text widgets\nGets the widget that is below the mouse cursor. This …\nReturns the bottom-right <code>x+w, y+h</code> coordinates of the …\nEnables the use of the cairo context with Cairo-rs. …\nGet the graphics context, <code>fl_gc</code>\nGet the callback reason\nCreates a channel returning a Sender and Receiver structs …\nCalling this during a big calculation will keep the screen …\nCheck the contents of the clipboard\nClose the current display\nText editing widget should call this for each FL_KEYBOARD …\nReset the length of bytes of app::compose()\nReturn the length of bytes written in app::compose()\nGet the contrast level\nGet the contrast mode\nCopy text to the clipboard\nCopy text to the selection buffer\nReturns the number of available screens\nGets FLTK crate version\nReturns whether any of the widgets were damaged\nDeletes widgets and their children.\nDisables wayland when building with use-wayland. Needs to …\nGets the display global variable, <code>fl_display</code>. <code>_XDisplay</code> on …\nInitiate dnd action\nReturns the current screen (vertical, horizontal) …\nDetermines if the currently drawn box is active or inactive\nEnable locks. This is called automatically in the …\nReturns the latest captured event\nReturns the captured button event. 1 for left key, 2 for …\nReturns false for a single click and true for more\nReturns the number of clicks - 1\nGet the clipboard content type\nGet the clipboard content if it’s an image\nReturns the x and y coordinates of the captured event\nThe event dispatch function is called after native events …\nReturns the current horizontal mouse scrolling associated …\nReturns the current horizontal mouse scrolling value …\nReturns the current vertical mouse scrolling associated …\nReturns the current vertical mouse scrolling value …\nReturns whether an event occurred within a region\nReturns whether an event occurred within a widget\nDetermines whether an event was a click\nReturns the pressed key\nReturns whether the  key is pressed or held down during …\nReturns the duration of an event\nReturns the captured button event\nReturns the original key\nReturns the state of the event\nReturns a textual representation of the latest event\nGets the x coordinate of the mouse in the window\nGets the x coordinate of the mouse in the screen\nGets the y coordinate of the mouse in the window\nGets the y coordinate of the mouse in the screen\nReturns the first window of the application\nGet the fl_msg win32 MSG object, see this discussion\nCauses all the windows that need it to be redrawn and …\nGets the widget which has focus\nGets the number of loaded fonts\nFinds the index of a font through its name\nGets the name of a font through its index\nGet the app’s font size\nGets a <code>Vector&lt;String&gt;</code> of loaded fonts, unless …\nSet the foreground color\nGet the max border radius for frame types\nFl::box_color. Gets the current frame color within …\nGet the shadow width for frames types with shadows\nGet the app’s frame type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the global sender\nGet the global receiver\nGets the already initialized global state\nGet the font’s name\nGet the font’s name\nReturns a list of fonts made available by the OS to the …\nGet a font’s sizes\nGets the mouse coordinates relative to the screen\nGets the system colors\nGet the grabbed window\nGet the graphics context, <code>fl_gc</code>\nReturns the height in pixels of the current screen’s …\nSend a signal to a window. Integral values from 0 to 30 …\nSend a signal to the main window. Integral values from 0 …\nSend a signal to a window pointer from event_dispatch. …\nChecks whether the check function, associated with the …\nChecks whether an idle function is installed\nChecks whether an idle function is installed\nChecks whether the idle function, associated with the …\nCheck whether a timeout is installed\nCheck whether a timeout is installed\nCheck whether the timeout, associated with the handle, is …\nInits all styles, fonts and images available to FLTK. Also …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the event is a alt key press\nReturns whether the event is a command key press\nReturns whether the event is a control key press\nReturns whether the event is a shift press\nCheck if fltk-rs was initialized\nReturns <code>true</code> if the current screen’s number corresponds …\nControls the possibility to scale all windows by …\nControls the possibility to scale all windows by …\nLoads a font from a path. On success, returns a String …\nLoads system fonts\nLocks the main UI thread\nGet the default menu line-spacing\nReturns the last modal window of the application\nThe screen number\nReturns the <code>Screen</code> associated with the given screen number\nCreates a new global state\nReturns the <code>Screen</code> that contains the specified screen …\nReturns the <code>Screen</code> which intersects the most with the …\nReturns the next window in order\nReturns the screen number of the screen that contains the …\nOpen the current display\nGet the option’s value\nMakes FLTK use its own colormap. This may make FLTK …\nPastes content from the clipboard\nPastes image content from the clipboard\nPastes image content from the selection buffer\nPastes textual content from the clipboard\nPastes textual content from the selection buffer\nProvids bindings to Preferences which provides methods to …\nDetermines whether a program should quit\nGets the widget which was pushed\nQuit the app\nQuit the application\nThis is similar to app::check() except this does not call …\nReceives a message\nRedraws everything\nRedraws the app\nUnset the currently grabbed window\nReload the app scheme\nRemove the check function associated with the handle\nStop calling the specified callback when there are changes …\nStop calling the specified callback when there are changes …\nRemove an idle function\nRemove an idle function\nRemove the idle function associated with the handle\nAdd a system handler\nRemoves a timeout callback\nRemoves a timeout callback\nRemoves the timeout callback associated with the handle\nRepeats a timeout callback from the expiration of the …\nRepeats a timeout callback from the expiration of the …\nRepeats the timeout callback, associated with the hadle, …\nRuns the event loop\nRuns the event loop\nReturns the value of the GUI scaling factor for the …\nReturns true if scaling factors are supported by this …\nReturns true if each screen can have its own scaling …\nGets the scheme of the application\nGets the scheme of the application\nReturns a pair of the x &amp; y coords of the screen\nReturns the screen count\nReturns a screen’s (vertical, horizontal) dpi resolution\nReturns the screen number of a screen that contains the …\nReturns the screen number for the screen which intersects …\nReturns the screen scale\nReturns whether scaling the screen is supported\nReturns a pair of the width and height of the screen\nGet a screen’s working area\nGet a screen’s xywh\nGet the app’s scrollbar size\nSends a message\nSet the background color for input and text widgets\nSet the background color\nSets the widget that’s below the mouse\nSets the callback of a widget\nSwap a color with a custom RGB value\nSet the contrast function, for use in …\nSet the contrast level\nSet the contrast mode\nSets the damage to true or false, eliciting a redraw by …\nSets the widget which has focus at the start of the …\nSet the app’s font\nSet the app’s font size\nInitializes loaded fonts of a certain pattern <code>name</code> Returns …\nSet the foreground color\nSet the max border radius for frame types\nFl::set_box_color. Sets the current frame color within …\nSet the shadow width for frames types with shadows\nSet the app’s default frame type\nSet the app’s default frame type without storing the old …\nSet the app’s default frame type\nSet the current grab\nSet the widget’s Id\nSets the app’s default selection color\nSet the menu line-spacing\nSet the option’s value\nSet a widget callback using a C style API\nSets the value of the GUI scaling factor for the current …\nsets the scheme of the application\nSets the scheme of the application\nSets the screen scale\nSet the application’s scrollbar size\nSets the app’s default selection color\nShow focus around widgets\nSets the visual mode of the application\nSet the visual of the application\nReturns whether a quit signal was sent\nPut the thread to sleep for <code>dur</code> seconds\nSwap the default frame type with a new frame type\nReturns the top-left <code>x,y</code> coordinates of the current screen…\nUnload a loaded font\nUnlocks the main UI thread\nGets FLTK version\nGets FLTK version string\nReturn whether visible focus is shown\nReturns the width in pixels of the current screen’s work …\nStarts waiting for events. Calls to redraw within wait …\nWait for incoming messages. Calls to redraw within wait …\nWaits a maximum of <code>dur</code> seconds or until “something …\nGet back the widget thru its id\nReturns the apps windows.\nModifies the global state by acquiring a mutable reference\nConstruct a widget with an Id\nSets the scheme of the application\nReturns the the work area of the current screen\nReturns the bounding rectangle of the work area of the …\nReturns the bounding rectangle of the work area of the …\nReturns the bounding rectangle of the work area with the …\nReturns the bottom-right x coordinate of the current screen…\nReturns the bounding rectangle of the screen that contains …\nReturns the bounding rectangle of the screen that contains …\nGets the bounding rectangle of the screen currently under …\nReturns the bounding rectangle of the screen with the …\nReturns the topmost y coordinate of the current screen’s …\nGets autolink\nGets the cairo context\nFlushes the cairo context\nMakes the cairo context current\nSets autolink\nSets the cairo context\nSet this to give FLTK and applications permission to read, …\nSet this to allow FLTK and applications to read preference …\nSet this to allow FLTK and applications to create and …\nSet this if it is OK for applications to read, create, and …\nOR’d by FLTK to read and write core library preferences …\nSet this if it is OK for FLTK to read, create, or write …\nSet this if it is OK for FLTK to read preference files. …\nSame as CORE | SYSTEM | C_LOCALE\nSame as CORE | USER | C_LOCALE\nSet this if it is OK for FLTK to create or write …\nThis flag should always be set, it makes sure that …\nDefines whether preferences are system-wide or not\nReturned if querying memory mapped preferences\nNone\nProvides methods to store user settings between …\nMask for the values above\nDefines whether preferences are system-wide or not\nvalues are written correctly independently of the current …\nSet this if it is OK for applications to read, create, and …\nSet this if it is OK for applications to read system wide …\nSet this if it is OK for applications to create and write …\nReturned if storage could not be determined.\nPreferences apply only to the current user, locale …\nSet this if it is OK for applications to read, create, and …\nSet this if it is OK for applications to read user …\nSet this if it is OK for applications to create and write …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nClear prefs\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nDelete all entries\nDelete all groups\nDelete an entry\nDelete a group\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nReturn the number of entries\nCheck whether an entry exists\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet filesystem access flags\nGet the filename\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet the value of an entry\nGet the value of an entry\nGet the value of an entry\nGet the value of an entry\nGet the userdata path\nCheck whether a group exists\nReturn the number of groups\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nReturn the pref’s name\nCreate a new Preferences object\nCreate a preferences object entry inside the group\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the prefs path\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the value of an entry\nSet the value of an entry\nSet filesystem access\nSet the value of an entry\nSet the value of an entry\nSet the value of an entry\nSet the value of an entry\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nAlways show bars\nShow both horizontal and vertical bars\nAlways show both horizontal and vertical bars\nCreates a normal browser. Example usage:\nDefines the type of Scrollbar associated with the browser\nDefines the browser type\nCreates a <code>CheckBrowser</code> widget\nShow dirs\nCreates a file browser\nFile types for the <code>FileBrowser</code>\nShow files\nEnable holding\nCreates a hold browser\nShow vertical bar\nShow horizontal bar always\nMulti selection\nCreates a multi-browser\nNever show bars\nNormal browser\nEnable select\nCreates a select browser\nShow vertical bar\nShow vertical bar always\nAdd an item, returns the number of current items\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nCheck all of the items\nCheck none of the items\nReturns whether an item is checked\nClear the browser\nGets the <code>FileType</code> of the <code>FileBrowser</code>\nGets the filter for the <code>FileBrowser</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the type of scrollbar associated with the browser\nGets the horizontal scroll position of the list as a pixel …\nReturns the horizontal scrollbar\nGets the icon size\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the number of checked items\nReturn the number of items\nGets the vertical scroll position of the list as a pixel …\nRemove item at index, returns the number of current items\nReturns the vertical scrollbar\nGets the scrollbar size\nCheck selected item\nSets the <code>FileType</code> of the <code>FileBrowser</code>\nSets the filter for the <code>FileBrowser</code>. The following syntax …\nSets the type of scrollbar associated with the browser\nSets the horizontal scroll position of the list as a pixel …\nSets the icon size\nSets the vertical scroll position of the list as a pixel …\nSets the scrollbar size\nSets the text’s color\nSets the text font\nSets the text size\nReturn the number of items\nSort browser elements\nGet the text of the item\nGets the text’s color\nGets the text font\nGets the text size\nReturns the selected line, returns 0 if no line is selected\nCreates a normal button\nDefines the button type, which can be changed dynamically …\nCreates a check button\nHidden button\nCreates a light button\nNormal button\nRadio button\nCreates a radio button. Radio meaning only one can be …\nCreates a radio light button. Radio meaning only one can …\nCreates a radio round button. Radio meaning only one can …\nCreates a repeat button\nCreates a return button\nCreates a round button\nCreates a Shortcut button\nToggle button\nCreates a toggle button\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nGet whether a button is compact\nClears the default shortcut\nGets the Shortcut button default value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether a <code>CheckButton</code> is checked\nCheck whether a <code>LightButton</code> is on\nCheck whether a <code>RadioButton</code> is toggled\nCheck whether a <code>RadioRoundButton</code> is toggled\nCheck whether a <code>RadioLightButton</code> is toggled\nCheck whether a <code>RoundButton</code> is toggled\nCheck whether a <code>ToggleButton</code> is toggled\nSet whether <code>CheckButton</code> is checked or not\nSet whether a button is compact\nSets the Shortcut button default value\nSets the Shortcut button value\nSets whether the <code>RadioButton</code> is toggled or not\nSets whether the <code>RadioRoundButton</code> is toggled or not\nSets whether the <code>RadioLightButton</code> is toggled or not\nSets whether the <code>RoundButton</code> is toggled or not\nSets whether the <code>ToggleButton</code> is toggled or not\nSets whether the <code>LightButton</code> is on or not\nGets the Shortcut button value\nDefines the type of beep to be passed to the beep function\nBrowse dir\nBrowse dir\nBrowse file\nBrowse file\nBrowse multiple dirs\nBrowse multiple dirs\nBrowse multiple files\nBrowse multiple files\nBrowse save directory\nBrowse save directory\nBrowse save file\nBrowse save file\nByte color mode\nCancelled operation\nCancelled operation\nColor modes to be used with the color chooser\nAllow creation of file/dir\nDefault beep\nDirectory\nError beep\nFLTK’s own <code>FileChooser</code>. Which differs for the Native …\nThe types of FileChooser\nFLTK’s NativeFileChooser\nRusult of try_show\nDefines the File dialog options, which can be set using …\nDefines the type of dialog, which can be changed …\nCreates a help dialog\nHex color mode\nHsv color mode\nMessage beep\nMultiple files\nFLTK’s NativeFileChooser\nAlias to <code>FileDialogAction</code>\nAlias to <code>FileDialogOptions</code>\nAlias for <code>NativeFileChooserType</code>\nNew folder option\nNo options\nNotification sound\nPassword sound\nEnable preview\nQuestion beep\nRgb color mode\nConfirm on save as\nSingle file\nUser chose a file/dir\nUser chose a file/dir\nUse extension filter\nDisplays an alert box\nDisplays an alert box, the dialog is positioned at the …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nEmits a beep\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nDisplays a choice box with up to three choices. Choosing a …\nDisplays a choice box with up to three choices. Closing …\nDisplays a choice box with up to three choices. An empty …\nDisplays a choice box with up to three choices. The dialog …\nGets the color of the <code>FileChooser</code>\nSpawns a color chooser dialog.\nSpawns a color chooser dialog.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nGets the count of chosen items\nDeletes a <code>FileChooser</code>\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nShows a directory chooser returning a String\nGets the directory of the <code>FileChooser</code>\nReturns the preset directory\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nreturns the error message from the file dialog\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nShows a file chooser returning a String. The pattern field …\nReturns the chosen file name\nReturns the chosen file names\nGets the filter of the <code>FileChooser</code>\nGets the filter of the <code>FileChooser</code>\nGets the current filename filter selection\nGets the current filename filter selection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGets the type of the <code>FileChooser</code>\nGet the width of the file chooser\nReturns the height of the help dialog\nReturns the height of the help dialog\nHides the file chooser\nHides the help dialog\nGets the icon size of the <code>FileChooser</code>\nDisplays an input box, which returns the inputted string. …\nDisplays an input box, which returns the inputted string. …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nGets the label of the <code>FileChooser</code>\nLoads a file for the help dialog\nDisplays a message box\nDisplays a message box, the dialog is positioned at the …\nGet whether hotspot is enabled for FLTK’s dialog boxes\nGet the frame holding the icon of FLTK’s dialog boxes\nSet the next dialog’s icon label\nSet the font and font size of FLTK’s dialog boxes\nSet whether hotspot is enabled for FLTK’s dialog boxes\nSet the next dialog’s title\nSet the default title for a dialog\nInstantiates a new <code>FileChooser</code>\nCreates an new file dialog\nCreates a new Help dialog with position(x, y) and size(w, …\nGets the new button of the <code>FileChooser</code>\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGets the label of the Ok button\nShows an input box, but with hidden string\nShows an input box, but with hidden string. The dialog is …\nGet the position of the file chooser\nSets the position of the help dialog\nReturns whether preview is enabled for the <code>FileChooser</code>\nGets the preview button of the <code>FileChooser</code>\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRescan the directory\nRescan the directory while keeping the file name\nResizes the help dialog\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet “Add favorites” label\nSet “All Files” label\nSets the callback of the <code>FileChooser</code>\nSets the color of the <code>FileChooser</code>\nSet “Custom Filter” label\nSets the directory of the <code>FileChooser</code>\nSets the starting directory\nSet “Existing file” label\nSet “Favorites” label\nSet “Filename” label\nSet “Filesystems” label\nSets the filter for the dialog, can be: Multiple patterns …\nSets the filter for the dialog, can be: A single wildcard …\nSets the filter value using an index to the ’\\t’…\nSets the filter value using an index to the ’\\t’…\nSet “hidden” label\nSets the icon size of the <code>FileChooser</code>\nSets the label of the <code>FileChooser</code>\nSet “Manage favorites” label\nSet “New directory” label\nSet “New directory” tooltip\nSets the label of the Ok button\nSets the option for the dialog\nSet the position of the file chooser\nSets the default filename for the dialog\nAdd preview to the <code>FileChooser</code>\nSet “Preview” label\nSet “Save” label\nSet “Show” label\nSet the size of the file chooser\nSets the text color of the file chooser\nSets the text font of the file chooser\nSets the text size of the file chooser\nSets the text size\nSets the title for the dialog\nSets the type of the <code>FileChooser</code>\nSets the type for the dialog\nSets the file or dir name chosen by the <code>FileChooser</code>\nSets the value of the help dialog\nShows the File Chooser\nShows the file dialog\nShows the help dialog\nGets the show hidden button of the <code>FileChooser</code>\nReturns whether the file chooser is shown\nReturns whether the help dialog is visible\nGet the size of the file chooser\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the text color of the file chooser\nGets the text font of the file chooser\nGets the text size of the file chooser\nReturns the text size\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nShows the file dialog\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGets the user data of the <code>FileChooser</code>\nGets the file or dir name chosen by the <code>FileChooser</code>\nReturns the value of the help dialog\nReturns whether the <code>FileChooser</code> is visible or not\nReturns whether the help dialog is visible\nGet the width of the file chooser\nReturns the width of the help dialog\nReturns the width of the help dialog\nReturn dialog window\nGet the x pos of the file chooser\nReturns the x position of the help dialog\nGet the y pos of the file chooser\nReturns the y position of the help dialog\nCap flat\nCap round\nCap square\n<code>i32</code> Coordinates\n<code>f64</code> Coordinates\nDefines a pair of <code>x, y</code> coordinates\nDash\nDash dot\nDash dot dot\nDot\nJoin bevel\nJoin miter\nJoin round\nDefines the line styles supported by fltk\nOpaque type around <code>Fl_Offscreen</code>\n<code>i32</code> Coordinates\nOpaque type around <code>Fl_Region</code>\nSolid line\nGet a flags value with all known bits set.\nBegins drawing in the offscreen\nStarts drawing a complex filled polygon\nStarts drawing a list of lines\nStarts drawing a closed sequence of lines\nStarts drawing a list of points. Points are added to the …\nStarts drawing a convex filled polygon\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nChecks whether platform supports true alpha blending for …\nCaptures the offscreen and returns raw data. Example usage:\nCaptures the image surface object and returns raw data. …\nCaptures the window and returns raw data. Example usage:\nCaptures part of the window and returns raw data. Example …\nReturns the typographical width of a single character\nGets the clip region\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nCopies the offscreen\nReturns the recommended distance above the bottom of a …\nThe intersection of a source flags value with the …\nDraws an arc\nDraws an arc\nDraws a box given the box type, size, position and color\nDraw a check mark\nDraws a circle\nDraws a filled circle\nAdds a series of points on a Bezier curve to the path\nDraws a focus rectangle\nDraws a series of line segments around the given box.\nDraws a series of line segments around the given box\nDraw an image into a widget. Requires a call to …\nDraw an image into a widget. Requires a call to …\nDraws a line\nDraws a line from (x,y) to (x1,y1) and another from …\nDraws a non-filled 3-sided polygon\nDraws a non-filled 3-sided polygon\nDraws a non-filled 4-sided polygon\nDraws a filled pie\nDraws a point\nDraws a point\nFills a 3-sided polygon. The polygon must be convex\nFills a 3-sided polygon. The polygon must be convex\nFills a 4-sided polygon. The polygon must be convex\nDraws a rounded box\nDraws a rectangle\nDraws a filled rectangle\nDraws a rectangle with border color\nDraws a filled rectangle\nDraws a filled rectangle with specified RGB color\nDraw a framebuffer (rgba) into a widget\nDraw a framebuffer (rgba) into a widget\nDraw a framebuffer (rgba) into a widget\nDraw a framebuffer (rgba) into a widget\nDraws a rounded rectangle\nDraws a filled rounded rectangle\nDraws a string starting at the given x, y location\nDraws a string starting at the given x, y location with …\nDraws a string starting at the given x, y location, …\nLike draw_text, however uses FLTK’s <code>fl_draw</code> which takes …\nDraws a horizontal line from (x,y) to (x1,y)\nDraws a horizontal line from (x,y) to (x1,y), then …\nDraws a horizontal line from (x,y) to (x1,y), then a …\nDraws a vertical line from (x,y) to (x,y1)\nDraws a vertical line from (x,y) to (x,y1), then a …\nDraws a vertical line from (x,y) to (x,y1) then a …\nGet a flags value with all bits unset.\nEnds drawing in the offscreen\nEnds complex filled polygon, and draws\nEnds list of lines, and draws\nEnds closed sequence of lines, and draws\nEnds list of points, and draws\nEnds closed sequence of lines, and draws\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGets the current font, which is used in various drawing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCall gap() to separate loops of the path\nGets the last used color\nHeight\nReturns the recommended minimum line spacing for the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nChecks the validity of the offscreen\nYield a set of contained flags values.\nYield a set of contained named flags values.\nConverts text from Windows/X11 latin1 character set to …\nConverts text from local encoding to Windowx/X11 latin1 …\nMeasure the width and height of a text\nConcatenates another transformation onto the current one\nReturns a new pair of <code>x, y</code> coordinates\nCreates a new offscreen type\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns whether the rectangle intersect with the current …\nErase a selection rectangle without drawing a new one\nDraws a selection rectangle, erasing a previous one by XOR…\nOverride the drawing scale\nPuts the drawing back\nPops the current transformation matrix from the stack\nLimits drawing to a region\nSaves the current transformation matrix on the stack\nPushes an empty clip region onto the stack so nothing will …\nThe intersection of a source flags value with the …\nRescales the offscreen\nResets the spot within the window\nRestores the clip region\nRestore the drawing scale\nConcatenates rotation transformation onto the current one\nDraws a UTF-8 string right to left starting at the given …\nConcatenates scaling transformation onto the current one …\nConcatenates scaling transformation onto the current one\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the clip region\nSets the color using rgb values\nSets the cursor style\nSets the cursor style\nSets the drawing color\nSets the drawing color\nSets the drawing color\nSets the current font, which is then used in various …\nSets the line spacing for the current font\nSets the line style\nSets spot within the window\nSets the status\nPerforms a shallow copy of the offscreen\nGet a human-readable string from a shortcut value\nShows a color map\nGets the current font size, which is used in various …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nMeasure the coordinates and size of the text where a …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTransforms distance using current transformation matrix\nTransforms distance using current transformation matrix\nTransforms coordinate using the current transformation …\nTransforms coordinate using the current transformation …\nAdds coordinate pair to the vertex list without further …\nConcatenates translation transformation onto the current …\nReturns a tuple of the values\nCreates an uninitialized offscreen type\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nAdds a single vertex to the current path\nWidth\nReturns the typographical width of a string\nReturns the typographical width of a sequence of n …\nMeasure the width and height of a text\nHorizontal X coordinate\nLeftmost corner\nHorizontal X coordinate\nVertical Y coordinate\nTopmost corner\nVertical Y coordinate\nAccumulation buffer\nActivate\nDefines alignment rules used by FLTK for labels\nEverything needs to be redrawn.\nAlpha channel in color\nAlt\nAlt Left\nAlt Right\nArrow\nBackGround\nBackGround2, Is the color inside input, output and text …\nBackSpace\nBackground\nBackground2, Is the color inside input, output and text …\nBlack\nBlue\nBorder Box\nBorder Frame\nBottom\nBottom Left\nBottom Right\nButton\nMouse button 1 is pushed\nMouse button 2 is pushed\nMouse button 3 is pushed\nMouse button 4 is pushed\nMouse button 5 is pushed\nAny mouse button is pushed\nDefines the callback reasons which can be queried using …\nDefines the types of triggers for widget callback …\nOperation cancelled\nCaps Lock\nCaps Lock\nCenter\nItem was changed\nChanged\nA child needs to be redrawn.\nClip\nClose\nItem was closed\nA child widget is closed (in a Tabs widget)\nDefines colors used by FLTK. Colors are stored as RGBI …\nDefines the color depth for drawing and rgb images\nCommand (Meta for macOS, Ctrl for other systems)\nControl (Ctrl for macOS, Meta for other systems)\nControl Left\nControl Right\nCourier\nCourier Bold\nCourier Bold Italic\nCourier Italic\nCross\nCtrl\nDefines the cursor styles supported by fltk\nCyan\nDamage masks\nDark1\nDark2\nDark3\nDarkBlue\nDarkCyan\nDarkGreen\nDarkMagenta\nDarkRed\nDarkYellow\nDeactivate\nDefault\nDelete\nDepth buffer\nItem was deselected\nDiamond Down Box\nDiamond Up Box\nDrag n Drop: Drag\nDndEnter\nDrag n Drop: Leave\nDrag n Drop: Release\nDouble buffered\nDown\nDown Box\nDown Frame\nDrag\nItem was dragged\nEast\nEisu\nEmbossed\nEmbossed Box\nEmbossed Frame\nEnd\nEngraved\nEngraved Box\nEngraved Frame\nEnter\nEnter\nEnter Key\nEnter Key Always\nEnter Key and Changed\nEscape\nDefines event types captured by FLTK\nAlias reflecting FLTK’s name\nThe window was exposed.\nF1\nF10\nF11\nF12\nF2\nF3\nF4\nF5\nF6\nF7\nF8\nF9\nFunction key last\nFake single buffered windows using double-buffer\nFlat Box\nFocus\nDefines fonts used by FLTK\nForeGround, label colors\nForeground, label colors\nFrameDefault\nDefines the frame types which can be set using the …\nFree\nFree BoxType\nFullscreen\nGleam Down Box\nGleam Down Frame\nGleam Round Down Box\nGleam Round Up Box\nGleam Thin Down Box\nGleam Thin Up Box\nGleam Up Box\nGleam Up Frame\nItem got focus\nGray0\nGrayRamp\nGreen\nGtk Down Box\nGtk Down Frame\nAlias GtkRoundDownFrame as GtkRoundDownBox\nGtk Round Down Frame\nGtk Round Up Frame\nGtk Thin Down Box\nGtk Thin Down Frame\nGtk Thin Up Box\nGtk Thin Up Frame\nGtk Up Box\nGtk Up Frame\nHand\nHelp\nHelp\nHelvetica\nHelvetica Bold\nHelvetica Bold Italic\nHelvetica Italic\nHide\nHome\nImage Backdrop\nImage Mask\nImage Next To Text\nInactive\nIndexed mode\nInsert\nInsert\nInside\nIsoKey\nJISUnderscore\nKeypad\nKeypad Enter\nKeypad Last\nKana\nDefines the inputted virtual keycode\nKeyDown\nKeyUp\nLuminance/grayscale\nLuminance with Alpha channel\nDefines label types\nLeave\nLeft\nLeft\nLeft Bottom\nLeft Top\nLight1\nLight2\nLight3\nItem lost focus\nMagenta\nMenu\nMeta\nMeta Left\nMeta Right\nDefines visual mode types (capabilities of the window). …\nMouseWheel\nMove\nMove\nMultiSample anti-aliasing\nNorth\nNorth East\nNorth East - South West\nNorth South\nNorth West\nNorth West - South East\nNever\nNo Box\nNo Event\nNone\nNone\nNone\nNone\nNo damage\nNormal\nNot Changed\nNumLock\nAlias OFlatFrame as OFlatBox\nOval Flat Frame\nOval Shadow Box\nItem was opened\nUse OpenGL version 3.0 or more\nOval Box\nOval Frame\nThe overlay planes need to be redrawn.\nPageDown\nPageUp\nPaste\nPause\nPlastic Down Box\nPlastic Down Frame\nPlastic Round Down Box\nPlastic Round Up Box\nPlastic Thin Down Box\nPlastic Thin Up Box\nPlastic Up Box\nPlastic Up Frame\nPosition Mask\nPrint\nPush\nRounded Flat Box\nRounded Shadow Box\nRed\nRelease\nRelease Always\nItem released\nReleased\nItem was reselected\nWindow Resize Event. Avoid resizing the parent during a …\nRgb color (not indexed)\nRGB888\nRgb8 color with at least 8 bits of each color\nRGBA8888 with Alpha channel\nRight\nRight\nRight Bottom\nRight Top\nRound Down Box\nRound Up Box\nRounded Box\nRounded Frame\nSouth\nSouth East\nSouth West\nScreen\nScreen Bold\nScreen Config Changed\nThe Fl_Scroll widget was scrolled.\nScrollLock\nItem was selected\nSelection\nSelection Clear\nShadow\nShadow Box\nShadow Frame\nShift\nShift Left\nShift Right\nDefines the modifiers of virtual keycodes\nShortcut\nShow\nSingle buffered\nStencil buffer\nStereoscopic rendering\nSymbol\nTab\nText Next To Image\nText Over Image\nThin Down Box\nThin Down Frame\nThin Up Box\nThin Up Frame\nTimes\nTimes Bold\nTimes Bold Italic\nTimes Italic\nTop\nTop Left\nTop Right\nSpecial background color value that lets the Terminal …\nUnfocus\nUnknown reason\nUp\nUp Box\nUp Frame\nFirst user-defined damage bit.\nSecond user-defined damage bit.\nUser-defined frame types\nWest\nWest East\nWait\nWhite\nWrap\nANSI/xterm background Blue, not part of FLTK’s colormap\nANSI/xterm background Cyan, not part of FLTK’s colormap\nANSI/xterm background Green, not part of FLTK’s colormap\nANSI/xterm background Magenta, not part of FLTK’s …\nANSI/xterm background Red, not part of FLTK’s colormap\nANSI/xterm background White, not part of FLTK’s colormap\nANSI/xterm background Yelllow, not part of FLTK’s …\nANSI/xterm Black, not part of FLTK’s colormap\nANSI/xterm Blue, not part of FLTK’s colormap\nANSI/xterm Cyan, not part of FLTK’s colormap\nANSI/xterm Green, not part of FLTK’s colormap\nANSI/xterm Magenta, not part of FLTK’s colormap\nANSI/xterm Red, not part of FLTK’s colormap\nANSI/xterm White, not part of FLTK’s colormap\nANSI/xterm Yellow, not part of FLTK’s colormap\nYellow\nYen\nZapfdingbats\nZoom Event\nZoom Gesture\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet the discriminant value or the user defined frame type\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGets the inner value of the Font\nGets the inner color representation\nGets the inner value\nGets the i32 value of a Key\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet the button number\nGets the Frame type by index\nReturns a font by index. This is the enum representation …\nReturns a color by index of RGBI\nGets the font by its name, can be queried via the …\nReturns a gray color value from black (i == 0) to white (i …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nReturns a color that contrasts with the background color.\nReturns an darker form of the color\nGet the frame’s height offset\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet the frame’s width offset\nGet the frame’s x offset\nGet the frame’s y offset\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturn the corresponding function key\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nGets a Key from a char\nCreate a shortcut from a char\nReturns a color from hex or decimal\nReturn a Color from a hex color format (<code>#xxxxxx</code>)\nCreates an event from an i32 value\nGets a Key from an i32\nCreate a shortcut from an i32\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nCreate a shortcut from a key\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nReturns a color from RGB\nCreate color from RGBA using alpha compositing. Works for …\nReturns a color enum from RGBI encoding\nReturns a color from hex or decimal\nCreate a ColorDepth from an u8 value\nGet the font’s real name\nReturns a gray color value from black (i == 0) to white (i …\nReturns the color closest to the passed grayscale value\nReturns an inactive form of the color\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturns whether a key is a function key\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nget key mask\nReturns an lighter form of the color\nLoad font from file.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns the color closest to the passed rgb value\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReplace a current font with a loaded font\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSwap frames\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet the char representation of a Key.\nReturns the color in hex string format\nGet the RGB value of the color\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCreates a new frame, an equivalent of <code>Fl_Box</code>\nInitialize center of another widget\nInitialize center of another widget\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAlways show bars\nAlign the widget at the bottom of the cell.\nAlign the widget at the bottom left of the cell.\nAlign the widget at the bottom right of the cell.\nShow both horizontal and vertical bars\nAlways show both horizontal and vertical bars\nAlign the widget at the center of the cell.\nClip tabs\nCreates a color chooser widget\nA wrapper around a Flex column\nrow direction\nCompress tabs\nDrag tabs\nStretch the widget in both directions to fill the cell.\na Flexbox widget\nDefines Flex types\nFltk’s grid widget\nDefines alignment rules used by FLTK’s Grid\nGrid range\nCreates a group widget\nDefines a Horizontal Grid (custom widget). Requires …\nStretch the widget horizontally to fill the cell.\nHorizontal layout pack\nShow vertical bar\nShow horizontal bar always\nAlign the widget at the left side of the cell.\nNever show bars\nStretch the widget proportionally.\nCreates a widget pack\nDefines pack types\nCreate a pulldown\nAlign the widget at the right side of the cell.\nA wrapper around a Flex row\ncolumn direction\nCreates a scroll group\nDefines Scroll types\nAlign the widget at the top of the cell.\nAlign the widget at the top left of the cell.\nAlign the widget at the top right of the cell.\nCreates a tab which can contain widgets\nDefines how Tabs handle overflow\nCreates a tile which can contain widgets. For the tiling …\nStretch the widget vertically to fill the cell.\nDefines a Vertical Grid (custom widget). Requires setting …\nVertical layout pack\nShow vertical bar\nShow vertical bar always\nCreates a wizard widget\nInitialize above of another widget\nInitialize above of another widget\nInitialize above of another widget\nInitialize above of another widget\nAdd a widget to the Flex box\nAdds widgets to the grid\nAdds widgets to the grid\nAdd a widget to the column with automatic layouting\nAdd a widget to the row with automatic layouting\nGet a flags value with all known bits set.\nLayout the children of the pack automatically. Must be …\nAuto layout a scroll widget\nAuto layout a tabs widget\nInitialize at bottom of another widget\nInitialize at bottom of another widget\nInitialize at bottom of another widget\nInitialize at bottom of another widget\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of parent\nInitialize center of parent\nInitialize center of parent\nInitialize center of parent\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget on the x axis\nInitialize center of another widget on the x axis\nInitialize center of another widget on the x axis\nInitialize center of another widget on the x axis\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget on the y axis\nInitialize center of another widget on the y axis\nInitialize center of another widget on the y axis\nInitialize center of another widget on the y axis\nInitialize center of another widget\nClear the layout\nReturns the position and size available to be used by its …\nSet the type to be a column\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nGet the current group\nGets the underlying widget of the current view\nDebug the flex layout\nDebug the grid\nConstructs a widget with the size of its parent\nConstructs a widget with the size of its parent\nConstructs a widget with the size of its parent\nConstructs a widget with the size of its parent\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nEnd the grid\nEnd the grid\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nSet the size of the widget, same as <code>set_size</code>, but more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nSets how the Tabs handles overflow\nReturn the hex color\nReturns the horizontal scrollbar\nGet the index of the wizard\nAdd a widget to the Flex box\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nCheck whether the GridRange is empty\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nRecalculate children’s coords and sizes\nLayout the grid\nInitialize left of another widget\nInitialize left of another widget\nInitialize left of another widget\nInitialize left of another widget\nCheck the length of the GridRange\nGet the margin\nGet the margins -&gt; returns (left, top, right, bottom)\nDrags the intersection at (\\p oldx,\\p oldy) to (\\p newx,\\p …\nGet whether the Grid needs layout\nCreates a new vertical grid\nCreates a new horizontal grid\nCreate a new column\nCreate a new row\nGets the next view of the wizard\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the padding\nGets the previous view of the wizard\nReturns the tab group for the tab the user has currently …\nRecalculate children’s coords and sizes\nThe intersection of a source flags value with the …\nReturn the rgb color\nInitialize right of another widget\nInitialize right of another widget\nInitialize right of another widget\nInitialize right of another widget\nSet the type to a row\nScrolls to <code>x</code> and <code>y</code>\nReturns the vertical scrollbar\nGets the scrollbar size\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the column gap\nSet the column weight\nSet the column width\nSets the current GroupExt widget which will take children\nSets the underlying widget of the current view\nSet the grid’s gap\nSet the index of the wizard\nSet the layout of the grid\nSet the layout of the grid, along with the margin and gap\nSet the margin\nSet the grid’s margin\nSet the margins\nSet the grid’s margins\nSet whether the Grid needs layout\nSet the padding\nSets the params for the grid\nSets the params for the grid\nThis is called by the tab widget’s handle() method to …\nSet the base color of the ColorChooser. Returns an error …\nSet the row gap\nSet the row height\nSet the row weight\nSets the scrollbar size\nSet the size of the widget, same as <code>fixed</code> (before it was …\nSet the spacing of the pack\nSet the padding\nSets the tab label alignment\nSet the base color of the ColorChooser. Returns an error …\nSets the currently visible group\nSet the widget at row/column using ranges\nSet the widget at row/column and alignment\nSet the widget at row/column using ranges along with the …\nShow the grid\nShow the grid with a certain color\nInitialize to the size of another widget\nInitialize to the size of another widget\nInitialize to the size of another widget\nInitialize to the size of another widget\nInitialize to the size of the parent\nInitialize to the size of the parent\nInitialize to the size of the parent\nInitialize to the size of the parent\nSet the allowed size range for the given child widget\nSet the allowed size range for the child at the given index\nGet the spacing of the pack\nGet the padding\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the tab label alignment.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTries to get the current group\nGets the underlying widget of the current view\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGets the currently visible group\nInitialize with alignment\nInitialize with alignment\nInitialize with alignment\nInitialize with alignment\nInitialize with a label\nInitialize with a label\nInitialize with a label\nInitialize with a label\nInitialize to position x, y\nInitialize to position x, y\nInitialize to position x, y\nInitialize to position x, y\nInitialize to size width, height\nInitialize to size width, height\nInitialize to size width, height\nInitialize to size width, height\nInitialize with type\nInitialize with type\nInitialize with type\nInitialize with type\nReturns the x position\nReturns the y position\nCreates a struct holding an animated GIF image\nDefines AnimGifImage flags\nMore accurate, but slower RGB image scaling algorithm\nCreates a struct holding a BMP image\nThis flag can be used to print even more informations …\nThis flag indicates to the loader that it should not …\nThis flag indicates to the loader that it should not set …\nThis flag indicates to the loader that it should not start …\nCreates a struct holding a GIF image\nCreates a struct holding a Windows icon (.ico) image\nIcon directory entry\nWrapper around <code>Fl_Image</code>, used to wrap other image types\nCreates a struct holding a Jpeg image\nThis flag can be used to print informations about the …\nDefault RGB image scaling algorithm\nNo Event\nOften frames change just a small area of the animation …\nCreates a struct holding a pixmap image\nCreates a struct holding a PNG image\nCreates a struct holding a PNM image\nCreates a struct holding a raw RGB image\nThe scaling algorithm to use for raster images\nCreates a struct holding a shared image\nCreates a struct holding an SVG image\nCreates a struct holding a tiled image\nCreates a struct holding a XBM image\nCreates a struct holding a XPM image\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBlur the image Adapted from …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nConvert from one <code>ColorDepth</code> to another <code>ColorDepth</code>\nConvert black pixels to transparent\nReturns the delay of the frame\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nLoads the image from data/memory\nLoads the image from data/memory\nLoads the image from data/memory\nLoads the image from data/memory\nLoads the image from data/memory\nLoads the image from data/memory\nInitializes a new raw <code>RgbImage</code> from shared data, doesn’t …\nLoads the image from data/memory\nInitializes a new raw <code>RgbImage</code> from shared data, doesn’t …\nLoads a <code>SharedImage</code> from an image\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates an <code>RgbImage</code> from a pixmap\nGet the icon directory entry\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstructs a raw <code>RgbImage</code> into parts\nWhether all known bits in this flags value are set.\nReturns whether the Gif is animated\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLoads a <code>SharedImage</code> from a path\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nLoads the image from a filesystem path, doesn’t check …\nCreates a new Pixmap image\nInitializes a new raw <code>RgbImage</code>, copies the data and …\nInitializes a new raw <code>RgbImage</code>, copies the data and …\nShow the next frame if the animation is stopped. Errors if …\nRasterize an <code>SvgImage</code>\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns whether the Gif is playing\nThe intersection of a source flags value with the …\nGets the scaling algorithm\nGets the scaling algorithm\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the delay of the frame\nSets the scaling algorithm\nSets the scaling algorithm\nSets the animation speed\nReturns the animation speed\nStarts the animation\nStops the animation\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns an SRGB image\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCreates a File-input widget\nFloat input\nCreates an input widget which takes only floats\nCreates an input widget\nInput!\nSets the input widget’s type\nInt input\nCreates an input widget which takes only integers\nMultiline input\nCreates a multiline-input widget\nNormal input\nReadonly input\nSecret input\nCreates a secret input widget\nWrap input\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nGet the <code>down_box</code> of the widget\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the <code>down_box</code> of the widget\nProvides the default implementation macro for browser …\nProvides the default implementation macro for button …\nProvides the default implementation macro for display …\nProvides the default implementation macro for group widgets\nProvides the default implementation macro for image widgets\nProvides the default implementation macro for input widgets\nProvides the default implementation macro for menu widgets\nProvides the default implementation macro for table widgets\nProvides the default implementation macro for valuator …\nProvides the default implementation macro for widget …\nProvides the default implementation macro for window …\nCreates a menu choice\nInactive item\nInvisible item\nWrapper around Fl_Mac_App_Menu which exposes several …\nCreates a menu bar\nCreates a menu button\nDefines the menu button types, which can be changed …\nMenu divider\nDefines the menu flag for any added menu items using the …\nHorizontal menu (actually reserved for future use)\nCreates a menu item\nNo Window menu in the system menu bar\nNormal item\npops up with the mouse 1st button.\npops up with the mouse 1st or 2nd buttons.\npops up with any mouse button.\npops up with the mouse 1st or 3rd buttons.\npops up with the mouse 2nd button.\npops up with the mouse 2nd or 3rd buttons.\npops up with the mouse 3rd button.\nItem is a radio button\nMenu item is a submenu\nIndicates user_data() is a pointer to another menu array …\nCreates a macOS system menu bar on macOS and a normal menu …\nWindows are created by themselves but can be tabbed later\nNo tabbed windows, but the system menu bar contains a …\nWindows are tabbed when created\nItem is a checkbox toggle (shows checkbox for on/off state)\nThe on/off state for checkbox/radio buttons (if set, state …\nDefines the window menu style for SysMenuBar\nActivates the menu item\nReturns whether the menu item is active\nAdd a menu item\nAdd a menu item along with an emit (sender and message).\nAdd an image to a menu item\nGet a flags value with all known bits set.\nReturns the inner pointer from a MenuItem\nGet the menu item at <code>idx</code>\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nGet children of <code>MenuItem</code>\nTurns the check or radio item “off” for the menu item\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nAdds custom menu items to the application menu of the …\nDeactivates the menu item\nDelete a menu item\nThe intersection of a source flags value with the …\nRun the menu item’s callback\nDraw a box around the menu item. Requires the call to be …\nUse a sender to send a message during callback\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nInitializes a MenuItem from a pointer\nHides the menu item\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert a menu item\nInsert a menu item along with an emit (sender and message).\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns whether a menu item is a checkbox\nWhether all bits in this flags value are unset.\nReturns whether a menu item is a radio item\nReturns whether a menu item is a submenu\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns the label of the menu item\nReturns the label color of the menu item\nReturns the label font of the menu item\nReturns the label size of the menu item\nReturns the label type of the menu item\nSet a callback for the “About” item of the system …\nMeasure the width and height of a menu item\nInitializes a new menu item. This will allocate a static …\nGet the next menu item skipping submenus\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nAct exactly as though the user clicked the button or typed …\nCreates a popup menu at the specified coordinates and …\nCreates a pulldown menu at the specified coordinates and …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the menu item\nSets the about text\nSets the about menu item callback\nSet a callback for the menu item\nSet the menu item’s shortcut\nSets the hide text\nSets the hide others text\nSets the label of the menu item\nSets the label color of the menu item\nSets the label font of the menu item\nSets the label size of the menu item\nSets the label type of the menu item\nSets the print text\nSets the print no titlebar text\nSets the quit text\nSets the services text\nSet the menu item’s shortcut\nSets the show text\nSets the toggle print titlebar text\nSets the macos window menu style\nShows the menu item\nGet the size of the MenuItem\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet the submenu count\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the user data\nReturns the value of the menu item\nReturns whether the menu item is visible or not\nCheck if a menu item was deleted\nBar chart\nCreates a chart widget\nDefines the chart types supported by fltk\nCreates a clock widget\nDefines the clock types supported by fltk\nFill chart\nCreates a <code>HelpView</code> widget which supports HTML 2 formatting\nHorizontal bar chart\nCreates an <code>InputChoice</code> widget\nLine chart\nPie chart\nCreates a progress bar\nRound clock\nSpecial pie chart\nSpike chart\nCreates a spinner widget\nSquare clock\nControls tooltips on an application-wide basis; use …\nAdds an entry\nAdd an element to the input choice\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nClears the chart\nClear the input choice widget\nClear selection\nGets the tooltips color\nSets the current widget associated with the tooltip\nReturns the current widget associated with the tooltip\nReturns the window used for tooltips\nGets the tooltips delay\nReturn the directory\nDisables the display of all tooltips\nGet the down frame type of the widget\nSets tooltips to be displayed if b is true; otherwise not …\nReturns whether the tooltips are enabled\nUsed to provide tooltips for internal pieces of your …\nReturn the filename\nFind a string, returns the index\nGets the tooltips font\nGets the tooltips font size\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the tooltips hide delay\nGets the tooltips hover delay\nGet the associated input widget\nInserts an entry at an index\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the chart is autosizable\nGets the current left line in pixels\nLoad a view from a file or URI\nSets the ability of the chart to be autosizable\nGets the tooltips margin height\nGets the tooltips margin width\nReturns the maximum value of the spinner widget\nReturns the maximum value of the progress bar\nReturns the maximum size supported by the spinner widget\nGets the maximum supported size of the chart\nGet the associated menu button\nReturns the minimum value of the spinner widget\nReturns the minimum value of the progress bar\nReplaces an entry at an index\nGets the scrollbar size\nSelect all\nSets the bounds of the chart\nSets the tooltips color\nSets the tooltips delay\nSet the <code>down_box</code> of the widget\nSets the tooltips font\nSets the tooltips font size\nSets the tooltips hide delay\nSets the tooltips hover delay\nSet the left line position\nSets the tooltips margin height\nSets the tooltips margin width\nSets the minimum value of the spinner widget\nSets the minimum value of the progress bar\nSets the maximum size supported by the spinner widget\nSets the maximum supported size of the chart\nSets the minimum value of the spinner widget\nSets the minimum value of the progress bar\nSets the range of the spinner widget\nSets the scrollbar size\nSets the step of the spinner widget\nSets the text’s color\nSets the text’s color\nSets the tooltips text color\nSets the text’s color\nSets the text’s color\nSets the text font\nSets the text font\nSets the text font\nSets the text font\nSets the text size\nSets the text size\nSets the text size\nSets the text size\nSet the top line position\nSet the top line string\nSets the value of the spinner\nSets the value of the progress bar\nSet the value to a string\nSet value of the widget\nSet the value of the input choice to the element at <code>idx</code>\nSets wrap for the spinner\nSets the tooltips wrap width\nReturns the size of the chart\nGets the range of the spinner widget\nGets the text’s color\nGets the text’s color\nGets the tooltips text color\nGets the text’s color\nGets the text’s color\nGets the text font\nGets the text font\nGets the text font\nGets the text font\nGets the text size\nGets the text size\nGets the text size\nGets the text size\nGet the top line position\nReturns the value of the spinner\nReturns the value of the progress bar\nGet the value of the current input choice\nGet the value of the widget\nGet the value index of the current input choice\nReturns whether wrap is set\nGets the tooltips wrap width\nMultiline input\nCreates a multiline-output widget\nNormal input\nCreates an output widget\nSets the input widget’s type\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the methods implemented by all browser types More …\nDefines the methods implemented by all button widgets. …\nDefines the methods implemented by <code>TextDisplay</code> and …\nError using an erroneous env variable\nFailed to set grid widget\nFailed operation, mostly unknown reason!\nFailed to initialize the multithreading\nFailed to run the application\nFailed to set the general scheme of the application\nError types returned by fltk-rs + wrappers of std errors\nError kinds enum for <code>FltkError</code>\nDefines the methods implemented by all group widgets. …\nDefines the methods implemented by all image types\nImage format error when opening an image of an unsupported …\nDefines the methods implemented by all input and output …\nInternal fltk error\nInvalid color\ni/o error\nDefines the methods implemented by all menu widgets These …\nNull string conversion error\nParsing error\nError due to printing\nSystem resource (file, image) not found\nDefines the methods implemented by all surface types, …\nError filling table\nDefines the methods implemented by table types. More …\nUnknown error\nUtf-8 conversion error\nDefines the methods implemented by all valuator widgets …\nDefines the extended methods implemented by all widgets\nDefines the methods implemented by all widgets\nA trait defined for all enums passable to the …\nDefines the methods implemented by all window widgets. …\nInitialize above of another widget\nActivates the widget\nReturns whether a widget is active\nReturns whether a widget or any of its parents are active …\nAdd a widget to a group\nAdd a menu item along with its callback. The characters “…\nAdds an item\nAdds a simple text option to the Choice and <code>MenuButton</code> …\nAdd a menu item along with an emit (sender and message). …\nAdds a widget to the group and makes it the resizable …\nAdds an item with associated data\nReturns the alignment of the widget\nAppend a &amp;str\nUpcast a <code>WidgetExt</code> to a Widget\nReturn the widget as a group widget if it’s a group …\nReturns a pointer of the image\ntransforms a widget to a base <code>Fl_Widget</code>, for internal use\nReturn the widget as a window if it’s a window\nMakes the widget derived\nGet the menu item at an index\nBegins a group, used for widgets implementing the group …\nInitialize at bottom of another widget\nReturns whether a window has a border\nScrolls the browser so the bottom item in the browser is …\nGet the bounds of all children widgets (left, upper, …\nGet the associated <code>TextBuffer</code>\nGet the callback column, should be called from within a …\nGet the callback context, should be called from within a …\nGet the callback row, should be called from within a …\nInitialize center of another widget\nInitialize center of parent\nPositions the window to the center of the screen\nInitialize center of another widget on the x axis\nInitialize center of another widget on the y axis\nReturns whether the widget was changed\nReturn child widget by index\nReturn the number of children in a group\nGets the user choice from the Choice and <code>MenuButton</code> widgets\nClamp the valuator\nClears the value of the button. Useful for round, radio, …\nClear a group from all widgets\nClears the items in a menu, effectively deleting them.\nClears the browser widget\nClears the table\nClears the changed status of the widget\nClear the damaged flag\nClear the modal state of the window\nClears a submenu by index\nClear visible focus\nGet whether <code>clip_children</code> is set\nReturns if column headers are enabled or not\nGets the row header color\nGets the column header height\nGets the column’s position\nReturns whether a column is resizable\nReturns the current column minimum resize value.\nConvert a column number into an x pixel position\nGets the column’s width\nReturns the widget color\nGets the number of columns\nGets the current column separator character. The default …\nGets the current column width array\nCopy the value within the widget\nPerforms a deep copy of the image\nPerforms a deep copy of the image but to a new size. This …\nReturn the count of pointers in an image (Pixmaps have …\nCounts the lines from start to end\nGet the cursor to row/col\nReturn the cursor color\nReturns the cursor color\nReturns the cursor style\nCut the value within the widget\nReturn whether the widget was damaged\nReturn the damage mask\nGet the data associated with the line\nGets the image’s data height\nGets the image’s data width\nDeactivates the widget\nReturns the decorated height\nReturns the decorated width\nSet the window’s default cursor\nConstructs a widget with the size of its parent\nGets the deactivated image associated with the widget\nGet a reference type of the widget’s deactivated image\nDeletes widgets and their children.\nDeletes the image\nGets the image’s depth\nSelect an item at the specified line. Lines start at 1\nReturns whether a certain line is displayed\nRuns the already registered callback\nGet the down frame type of the widget\nGet the down frame type of the widget\nSet a custom draw method. takes the widget as a closure …\nDraws the image at the presupplied coordinates and size\nOverride <code>draw_cell</code>. callback args: &amp;mut self, <code>TableContext</code>…\nDraw a child widget, the call should be in a …\nDraw children, the call should be in a <code>WidgetBase::draw</code> …\nDraws the image at the presupplied coordinates and size …\nDraw the outside label, the call should be in a …\nEmits a message on callback using a sender\nEnds a group, used for widgets implementing the group trait\nEnd the menu\nFind a widget within a group and return its index\nFind a cell’s coords and size by row and column\nFind an item’s index by its label\nGet a menu item by name\nForces the position of the window\nSet the format of a valuator\nGets the current format code prefix character, which by …\nReturns the widget’s frame type\nFrees the position of the window\nReturns the argument unchanged.\nReturns the argument unchanged.\nCast a type-erased widget back to its original widget\nCast a type-erased widget pointer back to its original …\nGet the widget type from its integral representation\nTransforms a raw image pointer to an image\nGet a widget from base widget\ntransforms a widget pointer to a Widget, for internal use\nMakes a window fullscreen. Requires that the window is …\nReturns whether the window is fullscreen or not\nGets the selection. Returns (<code>row_top</code>, <code>col_left</code>, <code>row_bot</code>, …\nReturns the widget type when applicable\nMake a menu globally accessible from any window\nGet the grammar underline color\nReturns the height of the widget\nReturn the height of the image\nSet a custom handler, where events are managed manually, …\nHandle a specific event\nReturn whether the widget has focus\nReturns the type of scrollbar associated with the browser\nReturn whether the widget has visible focus\nReturns the height of the widget\nReturn the height of the image\nHides the widget\nHides a the specified line\nSet the hotspot widget of the window\nGets the horizontal scroll position of the list as a pixel …\nReturns the horizontal scrollbar\nReturns the table’s horizontal scrollbar\nReturns the icon of the window\nReturns the icon of a browser element. Lines start at 1\nGet the icon label\nIconifies the window. You can tell that the window is …\nGets the image associated with the widget\nGet a reference type of the widget’s image\nChecks whether a pixel is within a text selection\nGreys the image\nIncrement the valuator\nResets the internal array of widget sizes and positions\nInsert a widget to a group at a certain index\nInsert a &amp;str\nInserts a menu item at an index along with its callback. …\nInsert into Display widget\nInserts an item at an index. Lines start at 1\nInserts a menu item along with an emit (sender and …\nReturn the insert position\nInserts an item at an index with associated data. Lines …\nChecks whether the self widget is inside another widget\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a widget implementing GroupExt into a Group widget\nTransforms an Image base into another Image\nUpcast a <code>WidgetExt</code> to some widget type\nChecks whether this surface is the current surface\nCheck whether a widget is derived\nReturns whether the resize is interactive\nChecks whether the OVERRIDE flag was set\nReturn whether two widgets object point to the same widget\nReturns whether a cell is selected\nReturns whether a button is set or not. Useful for round, …\nGet an item’s pathname\nReturns the label of the widget\nReturns the widget label’s color\nReturns the widget label’s font\nReturns the widget label’s size\nReturns the widget label’s type\nGets the image’s line data size\nInitialize left of another widget\nReturns the ending of the line from the current position. …\nReturns the beginning of the line from the current …\nGets the linenumber alignment\nGets the linenumber background color\nGets the linenumber foreground color\nGets the linenumber font\nGets the linenumber size\nGets the linenumber width\nLoad a file\nMakes the window current\nMakes a window modal, should be called before <code>show</code>\nMake the group itself resizable, should be called before …\nMakes a specified line visible\nReturns the index mark inside an input/output widget\nGet the maximum bound of a valuator\nReturns the maximum size (in bytes) accepted by an …\nMeasures the label’s width and height\nGet the menu element\nGet the menu’s popup frame type\nScrolls the browser so the middle item in the browser is …\nGet the minimum bound of a valuator\nGet the mode of a menu item by index and flag\nMoves the cursor\nMoves the cursor with shift select\nMoves the cursor down\nMoves an item. Lines start at 1\nMoves the cursor left\nMoves the cursor right\nMoves the cursor up\nGet the selected menu item\nCreates a new widget, takes an x, y coordinates, as well …\nGoes to the next word\nGet the window’s opacity\nReturns the parent of the widget\nPop the current surface\nReturns the index position inside an input/output widget\nGets the vertical scroll position of the list as a pixel …\nGets the x and y positions of the cursor\nGet the previously selected menu item\nGoes to the previous word\nPush a surface as a current surface\nGet the raw system handle of the window\nReturns whether the input/output widget is readonly\nRedraws a widget, necessary for resizing and changing …\nRedraws the label of the widget\nGet the graphical draw region of the window\nRemove a widget from a group, but does not delete it\nRemove a menu item by index\nRemoves the specified line. Lines start at 1\nRemove a child widget by its index\nRemoves the icon of a browser element. Lines start at 1\nReplace content with a &amp;str\nThe resizable widget defines both the resizing frame and …\nResizes and/or moves the widget, takes x, y, width and …\nPerform a callback on resize. Avoid resizing the parent or …\nRewinds the lines\nInitialize right of another widget\nRound the valuator\nReturns if row headers are enabled or not\nGets the row header color\nGets the row header width\nGets the row’s height\nGets the row’s position\nReturns whether a row is resizable\nReturns the current row minimum resize value.\nGets the number of rows\nScales the image\nGet the screen number\nScroll down the Display widget\nReturns the vertical scrollbar\nReturns the table’s vertical scrollbar\nReturns the scrollbar alignment\nReturns the scrollbar size in pixels\nGets the scrollbar size\nReturns the scrollbar size\nGet the secondary selection color\nSelect an item at the specified line. Lines start at 1\nReturns whether the item is selected Lines start at 1\nGets the selected items\nReturns the text of the selected item. Lines start at 1\nGets the selection color of the widget\nSets whether a button is set or not. Useful for round, …\nSets the alignment of the widget\nSets whether the window has a border\nSet bounds of a valuator\nSets the associated <code>TextBuffer</code>. Since the widget is …\nSets the callback when the widget is triggered (clicks for …\nMark the widget as changed\nClips children outside the group boundaries\nSets whether a column headers are enabled or not\nSets the column header color\nSets the column header height\nSets the column’s position\nSets a column to be resizable\nSets the current column minimum resize value.\nSets the column’s width\nSets all column’s width\nSets the widget’s color\nSets the number of columns\nSets the column separator to c. This will only have an …\nSets the current column width array\nSets the cursor style within the window. Needs to be …\nSets the cursor color\nSets the cursor color\nSet the cursor image\nSets the cursor style\nSignal the widget as damaged and it should be redrawn in …\nSignal damage for an area inside the widget\nSignal the type of damage a widget received\nSet the data associated with the line\nSets the deactivated image of the widget\nSets the deactivated image of the widget scaled to the …\nSet the <code>down_box</code> of the widget\nSet the <code>down_box</code> of the widget\nSets the current format code prefix character to \\p c. The …\nSets the widget’s frame type\nSet the grammar underline color\nSets the type of scrollbar associated with the browser\nSets the style of the text widget\nSets the style of the text widget\nSets the horizontal scroll position of the list as a pixel …\nSets the windows icon. Supported formats are bmp, jpeg, …\nSets the icon for browser elements. Lines start at 1\nSet the icon label\nSets the image of the widget\nSets the image of the widget scaled to the widget’s size\nSet the insert position\nSet selected item\nSets the widget’s label. labels support special symbols …\nSets the widget label’s color\nSets the widget label’s font\nSets the widget label’s size\nSets the widget label’s type\nSets the linenumber alignment\nSets the linenumber background color\nSets the linenumber foreground color\nSets the linenumber font\nSets the linenumber size\nSets the linenumber width\nSets the index mark inside an input/output widget\nSet the maximum bound of a valuator\nSets the maximum size (in bytes) accepted by an …\nSet the menu element\nSet the menu’s popup frame type\nSet the minimum bound of a valuator\nSet the mode of a menu item\nSet the window’s opacity, Ranges from 0.0 to 1.0, where …\nremoves the window border and sets the window on top, by …\nSet to position x, y\nSets the index position inside an input/output widget\nSets the vertical scroll position of the list as a pixel …\nSet the precision of a valuator\nSet the range of a valuator\nSet readonly status of the input/output widget\nSet the graphical draw region of the window\nSets whether a row headers are enabled or not\nSets the row header color\nSets the row header width\nSets the row’s height\nSets all rows height\nSets the row’s position\nSets a row to be resizable\nSets the current row minimum resize value.\nSets the number of rows\nSet the screen number\nSets the scrollbar alignment\nSets the scrollbar size in pixels\nSets the scrollbar size\nSets the scrollbar size\nSet the secondary selection color\nSets the selection\nSets the selection color of the widget\nSet the shape of the window. Supported image formats are …\nSets the shortcut associated with a button\nSet to dimensions width and height\nSet the spelling underline color\nSet change step of a valuator. Rounds to multiples of a/b, …\nSets whether tab key cell navigation is enabled\nSets whether tab navigation is enabled, true by default\nSets the table frame\nSets the text of the selected item. Lines start at 1\nSets the text color\nSets the text color\nSets the text color\nSets the text font\nSets the text font\nSets the text font\nSets the text size\nSets the text size\nSets the text size\nSets the text size. Lines start at 1\nSets the tooltip text\nSets the top row\nSets the default callback trigger for a widget, equivalent …\nSets the widget type\nSets whether a button is set or not. Useful for round, …\nSets the value inside an input/output widget\nSet index into menu of the last item chosen,return true if …\nSet the value of a valuator\nSet the widget to have visible focus\nSet whether text is wrapped inside an input/output widget\nSet the window’s XA_WM_CLASS property. This should be …\nGet the shape of the window\nGets the shortcut associated with a button\nShows the widget\nShows/hides the cursor\nScrolls the text buffer to show the current insert position\nReturns whether a window is shown\nGet the size of the menu widget\nReturns the number of items\nInitialize to the size of another widget\nInitialize to the size of the parent\nSet the window’s minimum width, minimum height, max …\nSkips lines from <code>start_pos</code>\nSorts the items of the browser\nGet the spelling underline color\nGet change step of a valuator\nGet the associated style <code>TextBuffer</code>\nGet the current surface\nSwaps 2 items. Lines start at 1\nReturns whether tab key cell navigation is enabled\nReturns whether tab navigation is enabled\nGets the table frame\nMake the widget take focus\nChecks whether a widget is capable of taking events\nGet the text label of the menu item at index idx\nReturns the text of the item at <code>line</code>. Lines start at 1\nReturn the text color\nReturn the text color\nReturn the text color\nReturn the text font\nReturn the text font\nReturn the text font\nReturn the text size\nReturn the text size\nReturn the text size\nReturn the text size\nGet the integral representation of the widget type\nReturns the underlying raw image data\nTransforms the image into an <code>RgbImage</code>\nReturns the underlying raw rgb image data\nTransforms the image into an <code>RgbImage</code>\nReturns the tooltip text\nScrolls the browser so the top item in the browser is …\nGets the top row\nReturns the topmost window holding the widget\nReturn the callback trigger, equivalent to <code>when()</code>\nTries to get the selection. Returns an Option((<code>row_top</code>, …\nThe range of row and column numbers for all visible and …\nUndo changes\nClears the items in a menu, effectively deleting them, and …\nUnset the style of the text widget\nUnset selection\nUpdate a child widget, the call should be in a …\nReturns whether a button is set or not. Useful for round, …\nReturns the value inside the input/output widget\nGet index into menu of the last item chosen, returns -1 if …\nGet the value of a valuator\nReturns the selected line, returns 0 if no line is selected\nReturns whether a widget is visible\nThe range of row and column numbers for all visible and …\nSet the visible focus using a flag\nReturns whether a widget or any of its parents are visible …\nReturns the width of the widget\nReturn the width of the image\nwait for the window to be displayed after calling <code>show()</code>. …\nCheck if a widget was deleted\nChecks if the image was deleted\nDoes a simple resize ignoring class-specific resize …\nReturns the width of the widget\nReturn the width of the image\nReturns the direct window holding the widget\nInitialize with alignment\nInitialize with a label\nInitialize to a position x, y\nInitialize to size width, height\nInitialize with type\nReturns the position of the end of the word, relative to …\nReturns the position of the start of the word, relative to …\nReturn whether text is wrapped inside an input/output …\nSets the wrap mode of the Display widget. If the wrap mode …\nCorrect a column number based on an unconstrained position\nCorrect a row number from an unconstrained position\nReturns the x coordinate of the widget\nGet the window’s x coord from the screen\nConvert an x pixel position into a column number.\nGet the window’s XA_WM_CLASS property\nReturns the y coordinate of the widget\nGet the window’s y coord from the screen\nDefines a printer object. Example usage:\nBegins a print job. <code>pagecount</code> The total number of pages to …\nBegins a print page\nEnds the print job\nEnd the print page\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCheck whether the printer is the current printer\nReturns the coordinates of the printable margins. (left, …\nGet the origin coordinates of the printable rect\nPrint a widget\nPrint a window\nReturns the width and height of the printable rect\nRotate the printable rect\nScale the printable rect\nSet the printer to be the current printer\nSet dialog “All”\nSet dialog “Cancel” button\nSet dialog “Copies”\nSet dialog “Number of copies”\nSet dialog “From”\nSet dialog “Pages”\nSet dialog “Print” button\nSet dialog “Print to file” button\nSet the dialog “Printer”\nSet dialog “Properties”\nSet dialog “Range”\nSet the dialog “Title”\nSet dialog “To”\nSet the origin coordinates of the printable rect\nSet property “Cancel”\nSet property “Mode”\nSet property “Page Size”\nSet property “Save”\nSet property “Title”\nSet property “Use”\nTranslate the printable rect\nUntranslate the printable rect\nAn image surface object. Example usage:\nAn SVG image surface object which allows drawing to an svg …\nDraw a widget on the image surface\nDraw a widget in an svg file surface. The .svg file is not …\ndraw a decorated window\ndraw a decorated window\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the high resolution image of an image surface as a …\nGets the image of an image surface as an rgb image\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new image surface\nReturns a new <code>SvgFileSurface</code>. The path if non-existent …\nGets the origin coordinates of an image surface\nReturns the width and height of the printable rect\nRescale an image surface\nSet the origin coordinates of an image surface\nSets the origin of the <code>SvgFileSurface</code>\nCell context\nColumn header context\nResizes on the left of the column\nResizes on the right of the column\nDeselect on click\nEnd of page context\nSelect several elements\nNo context\nNon resizable\nDisable select\nRow-Column resize context\nResizes to above the row\nResizes to below the row\nRow header context\nSelect on click\nSelect single elements\nstart of page context\nCreates a table For a simpler boilerplate-less table, …\nTable context\nDefines the <code>TableContext</code>\nDefines the <code>TableResizeFlag</code>\nCreates a table row\nDefines the table row select flag\nDefines the table row select mode\nToggle selection on click\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nClear setting the row count to 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether a row was selected\nSelects all rows\nSelects a row\nSet the row count, redraws the table.\nscrollbar is visible if widget has been resized in a way …\nBits for the per-character attributes, which control text …\nthis char’s bg color is an XTERM color; can be affected …\nbold text: uses bold font, color brighter than normal\nClass to read characters from the terminal’s buffer rows.\nIterator object to step through a sequence of Utf8Char in …\n&lt; carriage return generates a vertical line-feed (\\r -&gt; \\n)\nPer-character 8 bit flags (u8) used to manage special …\ndim text; color slightly darker than normal\nthis char’s fg color is an XTERM color; can be affected …\ninverse text; fg/bg color are swapped\nitalic font text\n&lt; line-feed generates a carriage return (\\n -&gt; \\r)\n&lt; line-feed generates a carriage return line-feed (\\n -&gt; \\r…\nNo flags\nApp must call redraw() as needed to update text to screen\nall attributes off\n&lt; no output translation\nScrollbar is always invisible\nScrollbar is always visible\nOutput translation flags for special control character …\nredraw triggered after <em>every</em> append() / printf() / etc. …\ntimer controlled redraws. (DEFAULT)\nDetermines when Fl_Terminal calls redraw() if new text is …\nControls behavior of scrollbar\nstrikeout text\nCreates a scrollable display widget to handle …\nunderlined text\nClass to manage the terminal’s individual UTF-8 …\n‘xterm color’ values, used in set_text_fg_color_xterm …\nused internally for line re-wrap during screen resizing\nReserved\nReserved\nReserved\nReserved\nReserved\n(reserved for internal future use)\n(reserved for internal future use)\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nReturns whether the terminal is in ANSI mode.\nAppends text to the terminal at current cursor position …\nAppends text to the terminal at current cursor position …\nAppends data to the terminal at current cursor position …\nAppends text to the terminal at current cursor position …\nAppends data to the terminal at current cursor position …\nReturn the actual displayed color of char <code>u8c</code> possibly …\nReturn the actual displayed fg color of char <code>u8c</code> possibly …\nReturn the attributes for this character.\nReturn the background color for this character.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGets the inner representation\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGets the inner representation\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInitialize center of another widget\nInitialize center of another widget\nsizeof(Fl_Terminal::Utf8Char)\nReturn the xterm CharFlags bits\nClears the screen to the current <code>textbgcolor()</code>, and homes …\nClear entire line cursor is currently on.\nClear from cursor to End Of Display (EOD), like “…\nClear from cursor to End Of Line (EOL), like “<code>&lt;ESC&gt;[K</code>”.\nClears the scroll history buffer and adjusts scrollbar, …\nClear entire line for specified row.\nClear any current mouse selection.\nClear the terminal screen only; does not affect the cursor …\nClear the terminal screen and home the cursor\nClear from cursor to Start Of Display (EOD), like “…\nClear from cursor to Start Of Line (SOL), like “<code>&lt;ESC&gt;[1K</code>…\nClears the screen to a specific color <code>val</code> and homes the …\nIndex into row array of Utf8Char\nGet the background color for the terminal’s …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nGet the cursor’s background color used for the cursor …\nReturn the cursor’s current column position on the …\nMoves cursor down <code>count</code> lines. If cursor hits screen …\nGet the cursor’s foreground color used for the cursor …\nMove cursor to the home position (top/left).\nMoves cursor left <code>count</code> columns, and cursor stops (does …\nMoves cursor right <code>count</code> columns. If cursor hits right …\nReturn the cursor’s current row position on the screen.\nMoves cursor up <code>count</code> lines. If cursor hits screen top, it …\nDelete char(s) at (<code>drow</code>,<code>dcol</code>) for <code>count</code> times.\nDelete char(s) at cursor position for <code>count</code> times.\nDelete <code>count</code> rows at cursor position. Causes rows to …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturn the ending row# in the display area.\nReturn the starting row# in the display area.\nReturn terminal’s display width in columns of text …\nReturn terminal’s display height in lines of text.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturn the foreground color for this character.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet the current mouse selection. Returns <code>None</code> if no …\nGiven a height in pixels, return number of rows that “…\nReturn the ending row# of the scrollback history.\nReturn the starting row# of the scrollback history.\nReturn number of rows in use by the scrollback history.\nReturn the starting row of the &quot;in use&quot; scrollback history.\nGets the terminal’s scrollback history buffer size in …\nReturns how many lines are “in use” by the screen …\nReturns the horizontal scrollbar\nGet the horizontal scrollbar behavior style.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert char <code>c</code> at the current cursor position for …\nInsert char <code>c</code> for <code>rep</code> times at display row <code>drow</code> and column …\nInsert <code>count</code> rows at current cursor position. Causes rows …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nReturns true if the character text in this struct matches …\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nIs global row/column inside the current mouse selection? …\nReturns true if there’s a mouse selection.\nIterator object to step through a sequence of Utf8Char in …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nReturn the length of this character in bytes (UTF-8 can be …\nNumber of characters in the row\nReturn the bottom margin\nReturn the left margin\nReturn the right margin\nReturn the top margin\nReturn the maximum length in bytes of a UTF-8 character\nConstruct a new Utf8Char, single-byte only. This is really …\nGenerate a new BuffRow object based on a pointer from C++ …\nBuild a RedrawStyle enum with an arbitrary value.\nBuild a HScrollbarStyle with an arbitrary value.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the current offset into the ring buffer.\nReturn the current combined output translation flags.\nPrint the ASCII character <code>c</code> at the terminal’s display …\nPrint a single UTF-8 character len at display position …\nPrints single ASCII char <code>c</code> at current cursor position, and …\nPrints single UTF-8 char <code>c</code> at current cursor position, and …\nReturn the width of this character in floating point …\nReturn the width of this character in integer pixels.\nGet max rate redraw speed in floating point seconds.\nGet the redraw style.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nResets terminal to default colors, clears screen, history …\nReturn the ending row# in the ring buffer (Always …\nReturn the number of rows in the ring buffer.\nReturn the starting row# in the ring buffer (Always 0)\nScroll the selection up(+)/down(-) number of rows <em>This is </em>…\nReturns the vertical scrollbar\nReturns the scrollbar’s actual “trough size”, which …\nGet current pixel size of all the scrollbar’s troughs …\nGet mouse selection background color.\nGet mouse selection foreground color.\nReturn text selection (for copy()/paste() operations)\nReturn byte length of all UTF-8 chars in selection, or 0 …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nEnable/disable ANSI mode. If true, ANSI and VT100/xterm …\nSets the background color for the terminal’s …\nSet the cursor’s background color used for the cursor …\nSet the cursor’s current column position on the screen. …\nSet the cursor’s foreground color used for the cursor …\nSet the cursor’s current row position on the screen. …\nSet terminal’s display width in columns of text …\nSets the terminal’s scrollback history buffer size in …\nSet the scrollbar behavior style.\nSet the bottom margin\nSet the left margin\nSet the right margin\nSet the top margin\nSets the combined output translation flags to <code>val</code>.\nSet the maximum rate redraw speed in floating point …\nSet how Terminal manages screen redrawing.\nSet the width of the both horizontal and vertical scrollbar…\nSet mouse selection background color.\nSet mouse selection foreground color.\nSet the “show unknown” flag. if true, show unknown …\nSet text attribute bits (underline, inverse, etc) for …\nSet text background color to fltk color val. Use this for …\nSet the default text background color used by &lt;ESC&gt;c, &lt;ESC&gt;…\nSets the background text color as one of the 8 ‘xterm …\nSet the text color for the terminal. This is a convenience …\nSet text foreground drawing color to fltk color val. Use …\nSet the default text foreground color used by &lt;ESC&gt;c, &lt;ESC&gt;…\nSets the foreground text color as one of the 8 ‘xterm …\nSets the font used for all text displayed in the terminal. …\nSets the font size used for all text displayed in the …\nReturn the “show unknown” flag. if true, show unknown …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturn a string copy of all lines in the terminal …")