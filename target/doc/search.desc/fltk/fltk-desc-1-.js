searchState.loadedDescShard("fltk", 1, "Return the text attribute bits (underline, inverse, etc) …\nGet the text background color.\nReturn the default text background color.\nGet the text foreground color.\nReturn the default text foreground color.\nGet the text font\nReturn text font size used to draw all text in the …\nReturn the UTF-8 text string for this character.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTrim trailing blanks off of BuffRow object. Does not …\nReturn the Utf8Char for character under cursor.\nReturn u8c for beginning of row drow of the display. <em>This </em>…\nReturn u8c for beginning of row hrow inside the scrollback …\nReturn u8c for beginning of row hurow inside the ‘in use…\nReturn u8c for beginning of row grow in the ring buffer. …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGiven a width in pixels, return number of columns that “…\nAny state/shortcut\nWrap text at certain bounds\nWrap text at certain column\nWrap text at certain pixel\nUse the background color in the <code>bgcolor</code> field\nUse the background color in the <code>bgcolor</code> field to highlight …\nBlock\nCaret\nDrag single character\nDefines the text cursor styles supported by fltk\nDim\nDefines drag types\nGrammar suggestion (blue dotted underline)\nHeavy\nDrag single line\nNo wrapping\nNo dragging\nNo attribute\nNormal\nSimple\nCreates an editable text display widget to handle …\nSpelling suggestion (red dotted underline)\nDrag Start “drag n drop” event\nLine through the middle of the text\nDefines the styles used in the <code>set_highlight_data</code>, which …\nDefines the styles used in the <code>set_highlight_data</code>, which …\nThe attribute of the style entry\nWraps a text buffer, Cloning a text buffer invalidates the …\nCreates a non-editable text display widget\nCreates an editable text display widget\nAlias Fl_Text_Editor for use in <code>add_key_binding</code>\nA single underline, underline types are mutually exclusive\nDrag single word\nDefines wrap modes\nAdd a key binding\nAdds a modify callback. callback args: pos: i32, inserted …\nReturns whether ANSI sequences are enabled\nAppends to the buffer. To append and scroll to the end of …\nAppends text to the terminal buffer\nAppend bytes to the buffer\nAppends data to the terminal buffer\nReturns the inner pointer from a text buffer\nattribute\nbackground color\nCalls the modify callbacks\nGets whether the buffer can redo\nSets whether the buffer can undo\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nClears the terminal\nFont color\nFont color\nCopies whole text from a source buffer into a new buffer\nCopies the text within the <code>TextEditor</code> widget\nCopies text from a source buffer into the current buffer\nCounts the lines from start to end\nCuts the text within the <code>TextEditor</code> widget\nInitialized a default text buffer\nDeletes the <code>TextBuffer</code>\nDeletes the <code>TextBuffer</code>\nBackward search for a char\nForward search for a char\nFont type\nFont type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes a text buffer from a pointer\nGets whether the buffer can undo\nHighlights selection\nReturns the highlight position\nReturns the highlighted text\nGets the max lines allowed in history\nInserts text into a position\nReturns whether insert mode is set\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether text is highlighted\nDoes a backspace\nExtends the current selection in the direction indicated …\nMoves the current text cursor in the direction indicated …\nInserts the text associated with key ‘c’\nDoes a delete of selected text or the current character in …\nMoves the text cursor one line down\nMoves the text cursor to the end of the current line\nInserts a new line\nMoves the text cursor to the beginning of the current line\nIgnores the key ‘c’ in editor\nToggles the insert mode for the editor\nMoves the text cursor one character to the left\nExtends the current selection in the direction indicated …\nMoves the current text cursor in the direction indicated …\nMoves the cursor in the direction indicated by the key\nMoves the text cursor down one page\nMoves the text cursor up one page\nMoves the text cursor one character to the right\nSelects all text in the associated buffer\nExtends the current selection in the direction of key ‘c…\nMoves the text cursor one line up\nGet the length of the buffer\nReturns the index of the line’s start position at pos\nReturns the line at pos\nLoads a file into the buffer\nPastes text from the clipboard into the <code>TextEditor</code> widget\nPerforms a redo operation on the buffer. Returns the …\nUndo changes in the <code>TextEditor</code> widget\nRemoves from the buffer\nRemove a key binding\nRemoves <code>count</code> lines from <code>start</code>\nRemoves a modify callback. callback args: pos: i32, …\nRemoves the secondary selection\nRemoves the selection\nReplaces text from position <code>start</code> to <code>end</code>\nReplaces the secondary selection\nReplaces selection\nSaves a buffer into a file\nBackward search for a string\nForward search for a string\nSecondary selects the text from start to end\nReturns whether text is secondary selected\nReturns the secondary selection position\nReturns the secondary selection text\nUnselects text (secondary selection)\nSelects the text from start to end\nReturns whether text is selected\nReturns the selection position\nReturns the selection text\nEnables ANSI sequences within the text to control text …\nSets the byte content of the terminal buffer\nSets the max lines allowed in history\nSet to insert mode\nSets whether the terminal automatically stays at the bottom\nSets the tab distance\nSet tab navigation\nSets the text of the buffer\nSets the text of the terminal buffer\nFont size\nFont size\nReturns whether the terminal automatically stays at the …\nReturns the tab distance for the buffer\nReturns whether tab navigation is set\nReturns the text of the buffer\nGets the text of the terminal buffer\nReturns the text within the range\nPerforms an undo operation on the buffer\nUndo changes in the <code>TextEditor</code> widget\nUnhighlights text\nUnselects text\nReturns the index of the last character of a word at pos\nReturns the index of the first character of a word at pos\nAlways reselect\nSort ascending\nTrigger callback when closed\nDefault draw mode\nSort descending\nDeselect when clicked\nTrigger callback when deselected\nDotted line\nTrigger callback when dragged\nDraws the height from widget\nDraws label and widget\nSelect multi\nDon’t sort\nNo line\nSelect none\nNo callback trigger\nReselect once\nTrigger callback when opened\nTrigger callback when reselected\nSelected when clicked\nTrigger callback when selected\nSelect single\nSelect single and make draggable\nSolid line\nToggle when clicked\nDefines a tree widget\nDefines the Tree’s connector sort order\nDefines a tree item\nDefines the <code>TreeItem</code>’s draw mode\nDefines the <code>TreeItem</code>’s reselect mode\nDefines the <code>TreeItem</code>’s select mode\nDefines the Tree’s callback reason\nDefines the Tree select mode\nDefines the Tree sort order\nActivate an item\nAdds a <code>TreeItem</code>\nAdds a <code>TreeItem</code>\nReturn the internal pointer of the tree item\nBegins the Tree widget\nRecalculate widget dimensions and scrollbar visibility, …\nRecalculates the tree’s sizes and scrollbar visibility, …\nGet the callback item\nGet the callback reason\nInitialize center of another widget\nInitialize center of another widget\nGets the child item at idx position\nGets the children count\nClears a tree\nClears all children\nRemove all children\nClose a tree item, causing the children to be hidden\nClose the item hiding all children\nGets the close icon\nGets the items’ connector color\nGets the connector style\nGets the connector’s width\nDeactivate an item\nDeparent a child by index\nGets the depth of the item\nDeselect an item at <code>path</code> and determine whether to do the …\nDeselect an item\nDeselect all items\nDeselect all subitems\nDisplay the item\nReturns whether an item is displayed\nOverrides the draw_item_content method Example usage:\nEnds the Tree widget\nExtend the selection between and including <code>from</code> and <code>to</code>\nExtend the selection between and including <code>from</code> and <code>to</code> in …\nFind a child using its name, returns index result\nFind child by name, returns option of the item\nfinds a clicked item\nFinds a tree item\nGets the first tree item\nGets the first selected tree item\nGets the first visible tree item\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a Tree from a raw <code>Fl_Tree pointer</code>\nCreate a <code>TreeItem</code> from a raw pointer\nGet the item that currently has keyboard focus\nGets the all tree items\nGets the selected tree items\nGets the height\nReturns whether the item has children\nGets the horizontal position of the item\nInserts a <code>TreeItem</code> at a position <code>pos</code>\nInserts a <code>TreeItem</code> above another tree item\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether an item is activated\nReturns whether an item is active\nReturns whether an item is closed\nReturns whether an item is closed\nReturns whether horizontal scrolling is visible\nReturns whether an item is open\nReturns whether an item is open\nReturns whether an item is root\nReturns whether the widget is a scrollbar\nReturns whether an item is selected\nReturns whether an item is selected\nReturns whether an item is visible\nReturns whether vertical scrolling is visible\nGets the Tree item’s draw mode\nGets the items’ background color\nGets the items’ foreground color\nGets the items’ label font\nGets the items’ label size\nGet an item’s pathname\nGets the Tree item’s reselect mode\nGets the label of the tree item\nGets the label’s foreground color\nGets the label’s color\nGets the label’s foreground color\nGets the label’s foreground color\nGets the label’s font\nGets the label’s height\nGets the label’s left margin\nGets the label’s size\nGets the label’s width\nGets the label’s x position\nGets the label’s y position\nGets the last tree item\nGets the last selected tree item\nGets the last visible tree item\nGets the line spacing\nGets the bottom margin\nGets the left margin\nGets the top margin\nMove the current item above the specified <code>item</code>\nMove the current item below the specified <code>item</code>\nParent the current item as a child of the specified <code>item</code>.\nMove the item ‘from’ to sibling position of ‘to’.\nCreates a new TreeItem\nGets the next tree item\nGets the next item\nGets the next item\nGets the next tree item, <code>direction_key</code> is by default …\nGets the next selected tree item, <code>direction_key</code> is by …\nGets the next sibling\nGets the next visible tree item\nOpens a tree item, causing the children to be shown\nOpen the item exposing all children\nGets the open child bottom margin\nGets the open icon\nToggle the open state\nToggle the open state of the item\nReturn the parent of the item\nGets the previous tree item\nGets the previous item\nGets the previous sibling\nRecalculates the tree’s sizes and scrollbar visibility, …\nRemoves a <code>TreeItem</code>\nRemove child using its name\nReparent a child by index\nReplace a tree item\nReplace a child\nGets the Tree’s root\nGets the scrollbar size\nSelect a tree item\nSelect an item at index\nSelect all items\nSelect all subitems, returns number of selected items\nGets the select frame\nGets the Tree select mode\nSelect only the specified item, deselecting all others …\nToggle the select state of the specified\nToggle the select state of an item\nSet the callback item\nSet the callback reason\nSets the close icon\nSets the items’ foreground color\nSets the connector style\nSets the connector’s width\nSets the horizontal position of the item\nSet the item that was last clicked.\nSets the Tree item’s draw mode\nSet the item that currently should have keyboard focus\nSets the items’ foreground color\nSets the items’ foreground color\nSets the items’ label font\nSets the items’ label size\nSets the Tree item’s reselect mode\nSets the label of the tree item\nSets the label’s background color\nSets the label’s color\nSets the label’s foreground color\nSets the label’s foreground color\nSets the label’s font\nSets the label’s left margin\nSets the label’s size\nSets the line spacing\nSets the bottom margin\nSets the left margin\nSets the top margin\nSets the open child bottom margin\nSets the open icon\nSet the parent of the item\nSets the Tree’s root\nSets the root label\nSets the scrollbar size\nSets the select frame\nSets the Tree select mode\nSets whether the collapse icon is enabled\nSets whether the root is shown\nSets the sort order\nSet the internal data of the tree item\nSets the user icon\nSets the user icon\nSets the user icon left margin\nSets the vertical position of the item\nSets the item’s associated widget\nSets the widget’s left margin\nReturns true if the collapse icon is enabled, false if not.\nShows an item\nAdjust the vertical scrollbar so that the is at the bottom …\nAdjust the vertical scrollbar so that <code>item</code> is in the …\nAdjust the vertical scrollbar so that <code>item</code> is visible\nReturns whether the root is shown\nShows the Tree widget\nShows the tree item\nGets the sort order\nSwap children a and b\nReturn the tree of the item\nGets the item’s associated widget\nUpdate surrounding siblings\nGet the stored data in the tree item\nGets the user icon\nGets the user icon\nGets the user icon left margin\nGets the vertical position of the item\nGets the width\nCheck if the tree item was deleted\nGets the item’s associated widget\nGets the widget’s left margin\nGets the x position\nGets the y position\nGet the length of a char in terms of C strings\nDecode a uri\nExpand a filename\nConvenience function to convert hex to rgb. Example:\nConvenience function to convert hex to rgba. Example:\nCheck whether a widget is of a certain type\nCheck whether a widget is of a certain type\nA utility module containing a OnceCell and Lazy types\nOpen a uri using the system’s browser\nConvenience function to convert rgb to hex. Example:\nConvenience function to convert rgba to hex. Example:\nGet the dynamic typeinfo of a widget, useful for debugging.\nA value which is initialized on the first access.\nA thread-safe cell which can be written to only once.\nCreates a new lazy value using <code>Default</code> as the initializing …\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the reference to the underlying value.\nGets the reference to the result of this lazy value if it …\nGets the mutable reference to the underlying value.\nGets the reference to the result of this lazy value if it …\nGets the contents of the cell, initializing it with <code>f</code> if …\nGets the contents of the cell, initializing it with <code>f</code> if …\nGet the reference to the underlying value, without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>OnceCell</code>, returning the wrapped value. Returns\nConsumes this <code>Lazy</code> returning the stored value.\nCreates a new empty cell.\nCreates a new lazy value with the given initializing …\nSets the contents of this cell to <code>value</code>.\nTakes the value out of this <code>OnceCell</code>, moving it back to an …\nLike <code>set</code>, but also returns a reference to the final cell …\nGets the reference to the underlying value, blocking the …\nCreates a new initialized cell.\nCreates an adjuster widget\nCreates a counter widget\nDefines counter types\nCreates a dial widget\nDefines dial types\nFilled dial\nCreates a fill dial\nCreates a fill slider\nCreates a horizontal fill slider\nCreates a horizontal nice slider\nCreates a horizontal slider\nCreates a horizontal value slider\nHorizontal slider\nHorizontal scrollbar\nHorizontal fill slider\nHorizontal fill scrollbar\nHorizontal nice slider\nHorizontal nice scrollbar\nLine dial\nCreates a line dial widget\nCreates a nice slider widget\nNormal dial\nNormal counter\nCreates a roller widget\nCreates a scrollbar widget\nDefines scrollbar types\nSimple counter\nCreates a slider widget\nDefines slider types\nCreates an value input widget, which takes a numeric value.\nCreates an value output widget\nCreates a value slider widget\nVertical slider\nVertical scrollbar\nVertical fill slider\nVertical fill scrollbar\nVertical nice slider\nVertical nice scrollbar\nGet the angles of the dial\nGet the angles of the dial\nGet the angles of the dial\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the scrollbar’s linesize\nSets the position, size and range of the slider in the …\nSets the position, size and range of the slider. <code>pos</code>   …\nSet the angles of the dial\nSet the angles of the dial\nSet the angles of the dial\nSet the scrollbar’s linesize\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the frame type of the slider box\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet the slider size as a fraction of the long axis\nSet whether the user is allowed to drag the value outside …\nSets the text’s color\nSets the text’s color\nSets the text’s color\nSets the text’s color\nSets the text font\nSets the text font\nSets the text font\nSets the text font\nSets the text size\nSets the text size\nSets the text size\nSets the text size\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the frame type of the slider box\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nGet the slider size as a fraction of the long axis\nReturns whether the user is allowed to drag the value …\nGets the text’s color\nGets the text’s color\nGets the text’s color\nGets the text’s color\nGets the text font\nGets the text font\nGets the text font\nGets the text font\nGets the text size\nGets the text size\nGets the text size\nGets the text size\nAn empty widget. Instantiating a Widget requires that you …\nWidget Tracker\nAn alias exposing the Widget tracker\nInitialize center of another widget\nInitialize center of another widget\nChecks if the wrapped widget was deleted\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new widget tracker\nGets the wrapped widget\nAn Android window\nDouble window\nCreates a double (buffered) window widget\nA wrapper around a raw OpenGL context\nCreates a Menu window widget\nSingle window\nCreates an overlay (buffered) window widget\nOpaque raw window handle (<code>*mut c_void</code> to <code>HWND</code> on Windows …\nAn alias for WindowType::Normal\nCreates a single (buffered) window widget\nCreates a window widget\nDefines the window type\nInitialize above of another widget\nInitialize at bottom of another widget\nReturns whether the overlay window can do hardware backed …\nInitialize center of another widget\nInitialize center of parent\nInitialize center of another widget on the x axis\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget on the y axis\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nInitialize center of another widget\nGet the default XA_WM_CLASS property for all windows of …\nGet the default XA_WM_CLASS property for all windows of …\nGet the default XA_WM_CLASS property for all windows of …\nDraw overlay\nFind an <code>Fl_Window</code> through a raw handle. The window must …\nFind an <code>Fl_Window</code> through a raw handle. The window must …\nFind an <code>Fl_Window</code> through a raw handle. The window must …\nForces the window to be drawn, this window is also made …\nForces the window to be drawn, this window is also made …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize left of another widget\nMaximize the window\nMaximize the window\nMaximize the window\nChecks whether the window is maximized\nChecks whether the window is maximized\nChecks whether the window is maximized\nGets the window’s height in pixels\nGets the window’s height in pixels\nGets the window’s height in pixels\nGets the window’s width in pixels\nGets the window’s width in pixels\nGets the window’s width in pixels\nReturns the pixels per unit/point\nReturns the pixels per unit/point\nReturns the pixels per unit/point\nHide a window using the platforms hide call. Works on …\nShow a window after it had been hidden. Works on Windows …\nRedraw overlay\nInitialize right of another widget\nSet the default XA_WM_CLASS property for all windows of …\nSet the default XA_WM_CLASS property for all windows of …\nSet the default XA_WM_CLASS property for all windows of …\nSet the window to be on top of other windows. Must only be …\nSet the window to be on top of other windows. Must only be …\nSet the window to be on top of other windows. Must only be …\nUse FLTK specific arguments for the application: More info …\nUse FLTK specific arguments for the application: More info …\nUse FLTK specific arguments for the application: More info …\nUse FLTK specific arguments for the application: More info …\nUse FLTK specific arguments for the application: More info …\nUse FLTK specific arguments for the application: More info …\nInitialize to the size of another widget\nInitialize to the size of the parent\nUnmaximize the window\nUnmaximize the window\nUnmaximize the window\nInitialize with alignment\nInitialize with a label\nInitialize to position x, y\nInitialize to size width, height\nInitialize with type")